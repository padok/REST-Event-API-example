# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Openhours(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, day: object=None, open_from: object=None, open_to: object=None):  # noqa: E501
        """Openhours - a model defined in Swagger

        :param day: The day of this Openhours.  # noqa: E501
        :type day: object
        :param open_from: The open_from of this Openhours.  # noqa: E501
        :type open_from: object
        :param open_to: The open_to of this Openhours.  # noqa: E501
        :type open_to: object
        """
        self.swagger_types = {
            'day': object,
            'open_from': object,
            'open_to': object
        }

        self.attribute_map = {
            'day': 'day',
            'open_from': 'openFrom',
            'open_to': 'openTo'
        }

        self._day = day
        self._open_from = open_from
        self._open_to = open_to

    @classmethod
    def from_dict(cls, dikt) -> 'Openhours':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Openhours of this Openhours.  # noqa: E501
        :rtype: Openhours
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self) -> object:
        """Gets the day of this Openhours.


        :return: The day of this Openhours.
        :rtype: object
        """
        return self._day

    @day.setter
    def day(self, day: object):
        """Sets the day of this Openhours.


        :param day: The day of this Openhours.
        :type day: object
        """

        self._day = day

    @property
    def open_from(self) -> object:
        """Gets the open_from of this Openhours.


        :return: The open_from of this Openhours.
        :rtype: object
        """
        return self._open_from

    @open_from.setter
    def open_from(self, open_from: object):
        """Sets the open_from of this Openhours.


        :param open_from: The open_from of this Openhours.
        :type open_from: object
        """

        self._open_from = open_from

    @property
    def open_to(self) -> object:
        """Gets the open_to of this Openhours.


        :return: The open_to of this Openhours.
        :rtype: object
        """
        return self._open_to

    @open_to.setter
    def open_to(self, open_to: object):
        """Sets the open_to of this Openhours.


        :param open_to: The open_to of this Openhours.
        :type open_to: object
        """

        self._open_to = open_to
