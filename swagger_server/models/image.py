# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Image(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: int=None, url: str=None, uuid: str=None):  # noqa: E501
        """Image - a model defined in Swagger

        :param description: The description of this Image.  # noqa: E501
        :type description: str
        :param id: The id of this Image.  # noqa: E501
        :type id: int
        :param url: The url of this Image.  # noqa: E501
        :type url: str
        :param uuid: The uuid of this Image.  # noqa: E501
        :type uuid: str
        """
        self.swagger_types = {
            'description': str,
            'id': int,
            'url': str,
            'uuid': str
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'url': 'url',
            'uuid': 'uuid'
        }

        self._description = description
        self._id = id
        self._url = url
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Image of this Image.  # noqa: E501
        :rtype: Image
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self) -> str:
        """Gets the description of this Image.


        :return: The description of this Image.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Image.


        :param description: The description of this Image.
        :type description: str
        """

        self._description = description

    @property
    def id(self) -> int:
        """Gets the id of this Image.


        :return: The id of this Image.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Image.


        :param id: The id of this Image.
        :type id: int
        """

        self._id = id

    @property
    def url(self) -> str:
        """Gets the url of this Image.


        :return: The url of this Image.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Image.


        :param url: The url of this Image.
        :type url: str
        """

        self._url = url

    @property
    def uuid(self) -> str:
        """Gets the uuid of this Image.


        :return: The uuid of this Image.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this Image.


        :param uuid: The uuid of this Image.
        :type uuid: str
        """

        self._uuid = uuid
