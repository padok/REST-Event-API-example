# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.location import Location  # noqa: F401,E501
from swagger_server import util


class EventRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, location: Location=None, start_datetime: datetime=None, end_datetime: datetime=None, description: str=None, images: List[str]=None, age_from: int=None, age_to: int=None):  # noqa: E501
        """EventRequest - a model defined in Swagger

        :param name: The name of this EventRequest.  # noqa: E501
        :type name: str
        :param location: The location of this EventRequest.  # noqa: E501
        :type location: Location
        :param start_datetime: The start_datetime of this EventRequest.  # noqa: E501
        :type start_datetime: datetime
        :param end_datetime: The end_datetime of this EventRequest.  # noqa: E501
        :type end_datetime: datetime
        :param description: The description of this EventRequest.  # noqa: E501
        :type description: str
        :param images: The images of this EventRequest.  # noqa: E501
        :type images: List[str]
        :param age_from: The age_from of this EventRequest.  # noqa: E501
        :type age_from: int
        :param age_to: The age_to of this EventRequest.  # noqa: E501
        :type age_to: int
        """
        self.swagger_types = {
            'name': str,
            'location': Location,
            'start_datetime': datetime,
            'end_datetime': datetime,
            'description': str,
            'images': List[str],
            'age_from': int,
            'age_to': int
        }

        self.attribute_map = {
            'name': 'name',
            'location': 'location',
            'start_datetime': 'startDatetime',
            'end_datetime': 'endDatetime',
            'description': 'description',
            'images': 'images',
            'age_from': 'ageFrom',
            'age_to': 'ageTo'
        }

        self._name = name
        self._location = location
        self._start_datetime = start_datetime
        self._end_datetime = end_datetime
        self._description = description
        self._images = images
        self._age_from = age_from
        self._age_to = age_to

    @classmethod
    def from_dict(cls, dikt) -> 'EventRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Event_Request of this EventRequest.  # noqa: E501
        :rtype: EventRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this EventRequest.


        :return: The name of this EventRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this EventRequest.


        :param name: The name of this EventRequest.
        :type name: str
        """

        self._name = name

    @property
    def location(self) -> Location:
        """Gets the location of this EventRequest.


        :return: The location of this EventRequest.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location: Location):
        """Sets the location of this EventRequest.


        :param location: The location of this EventRequest.
        :type location: Location
        """

        self._location = location

    @property
    def start_datetime(self) -> datetime:
        """Gets the start_datetime of this EventRequest.


        :return: The start_datetime of this EventRequest.
        :rtype: datetime
        """
        return self._start_datetime

    @start_datetime.setter
    def start_datetime(self, start_datetime: datetime):
        """Sets the start_datetime of this EventRequest.


        :param start_datetime: The start_datetime of this EventRequest.
        :type start_datetime: datetime
        """

        self._start_datetime = start_datetime

    @property
    def end_datetime(self) -> datetime:
        """Gets the end_datetime of this EventRequest.


        :return: The end_datetime of this EventRequest.
        :rtype: datetime
        """
        return self._end_datetime

    @end_datetime.setter
    def end_datetime(self, end_datetime: datetime):
        """Sets the end_datetime of this EventRequest.


        :param end_datetime: The end_datetime of this EventRequest.
        :type end_datetime: datetime
        """

        self._end_datetime = end_datetime

    @property
    def description(self) -> str:
        """Gets the description of this EventRequest.


        :return: The description of this EventRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this EventRequest.


        :param description: The description of this EventRequest.
        :type description: str
        """

        self._description = description

    @property
    def images(self) -> List[str]:
        """Gets the images of this EventRequest.


        :return: The images of this EventRequest.
        :rtype: List[str]
        """
        return self._images

    @images.setter
    def images(self, images: List[str]):
        """Sets the images of this EventRequest.


        :param images: The images of this EventRequest.
        :type images: List[str]
        """

        self._images = images

    @property
    def age_from(self) -> int:
        """Gets the age_from of this EventRequest.


        :return: The age_from of this EventRequest.
        :rtype: int
        """
        return self._age_from

    @age_from.setter
    def age_from(self, age_from: int):
        """Sets the age_from of this EventRequest.


        :param age_from: The age_from of this EventRequest.
        :type age_from: int
        """

        self._age_from = age_from

    @property
    def age_to(self) -> int:
        """Gets the age_to of this EventRequest.


        :return: The age_to of this EventRequest.
        :rtype: int
        """
        return self._age_to

    @age_to.setter
    def age_to(self, age_to: int):
        """Sets the age_to of this EventRequest.


        :param age_to: The age_to of this EventRequest.
        :type age_to: int
        """

        self._age_to = age_to
